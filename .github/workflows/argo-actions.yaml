name: GitOps pipeline with ArgoCD

on:
  push:
    branches:
      - main

env:
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }} .

      - name: Scan Docker Image with Trivy
        run: docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image ${{ secrets.DOCKERHACK_USERNAME }}/my-app:${{ github.sha }}

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}

  gitops-update:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ secrets.GIT_USERNAME }}"
          git config user.email "${{ secrets.GIT_EMAIL }}"

      - name: Update deployment manifest with new image
        run: |
          # Pull latest changes first
          git pull origin main
          
          # Update the image tag in deployment.yaml
          sed -i "s|${{ secrets.DOCKERHUB_USERNAME }}/my-app:.*|${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}|g" manifests/deployment.yaml
          
          # Verify the change
          grep "image:" manifests/deployment.yaml

      - name: Commit and push to trigger ArgoCD
        run: |
          git add manifests/deployment.yaml
          git commit -m "CI: Update image to ${{ github.sha }}"
          git push origin main

      - name: Verify ArgoCD will auto-sync
        run: |
          echo "âœ… Deployment manifest updated in Git"
          echo "ðŸ“¦ New image: ${{ secrets.DOCKERHUB_USERNAME }}/my-app:${{ github.sha }}"
          echo "ðŸ”„ ArgoCD will automatically detect changes and sync"
